# Convert between geographic coordinates and Robinson map projection X-Y coordinates
# The X origin is at the prime meridian (0 degrees)
# The Y origin is at the equator
# Latitude and longitude in degrees
# X-Y coordinates scaled to map width (optional parameter).
#	+/-180 degrees longitude at the equator are the right & left map side midpoints.
#	+/-90 degrees latitude are the top & bottom edges.
# The map height (max Y - min Y) is 0.507188 times the width.
# The default width is 1.0, for which X ranges from -0.5 to 0.5 (given +/-180 degrees
#	longitude), and Y ranges from -0.253594 to 0.253594
#
# The calculations use a cubic spline interpolation of the published Robinson map
#	coefficients, which are given for 5 degree increments of latitude.  See Wikipedia
#	"Robinson projection".
#
# Precision converting from geographic to X-Y coordinates is better than 1 in 10^8.
# Precision converting from X-Y to geographic coordinates is better than 1 in 10,000
#	at low latitudes, degrading to 1 in 1000 from about 75 degrees to 90 degrees.
#
# Function input parameters are not constrained, but latitude magnitudes greater than 90
#	will be clipped to 90; similarly Y magnitudes that are out or range will be clipped.
#	Longitude and X values are not clipped, so it is possible to work with a map that
#	extends beyond +/-180 degrees longitude (the scaling would still be to the +/-180
#	degree coordinate; distortion would increase).
#
# Carl Magagnosc, 18 Aug 2022

Acoef = [[2.77777777777778e-03,0,-4.968854146718e-06,1.07996525782922e-06],
	[2.77388888888889e-03,-6.69781251994834e-06,-1.72895837323032e-06,-4.62117995710782e-07],
	[0.002765,-1.15420832535413e-05,-3.11531236036267e-06,-3.42604386095825e-07],
	[0.00275,-1.88005211325541e-05,-4.14312551865015e-06,1.27697998453749e-06],
	[2.72833333333333e-03,-2.3255832216242e-05,-3.12185565037674e-07,-1.98753777427551e-06],
	[2.70277777777778e-03,-2.98428166691438e-05,-6.27479888786417e-06,6.50444589668156e-09],
	[2.66666666666667e-03,-4.23729011071821e-05,-6.2552855501741e-06,5.72631101800709e-07],
	[2.61861111111111e-03,-5.31655789021282e-05,-4.53739224477201e-06,-9.08139964211064e-07],
	[0.00256,-6.49647832843054e-05,-7.26181213740526e-06,1.6710398661552e-06],
	[2.48944444444444e-03,-7.44752879606503e-05,-2.24869253893972e-06,-1.88713061152083e-06],
	[2.41083333333333e-03,-8.46340648730923e-05,-7.91008437350209e-06,1.15526035770526e-06],
	[2.31944444444444e-03,-9.69884525469807e-05,-4.44430330038627e-06,3.21644736256123e-07],
	[2.21833333333333e-03,-1.04912124938985e-04,-3.47936909161797e-06,3.35938475047161e-07],
	[2.11027777777778e-03,-1.10863047697079e-04,-2.47155366647645e-06,-8.32065303110719e-07],
	[1.99611111111111e-03,-1.18302350939364e-04,-4.96774957580858e-06,-2.84101059593817e-06],
	[0.00187,-1.36760881878796e-04,-1.34907813636231e-05,6.08499657575216e-06],
	[1.72583333333333e-03,-1.45487454878786e-04,4.76420836363349e-06,4.33435762626374e-06],
	[1.58944444444444e-03,-1.22955965272728e-04,1.77672812424248e-05,-5.92242708080827e-06],
	[1.47833333333333e-03,0,0,0]]

Bcoef = [[0,1.57228308069505e-02,6.93889390390723e-18,-2.67960685237933e-09],
	[1.57228281273436e-02,1.57228227681299e-02,-8.03882053285188e-09,1.33980342306717e-08],
	[3.14456562546873e-02,1.57228468845916e-02,3.21552821522242e-08,-5.09125300807156e-08],
	[4.71684843820309e-02,1.57227584575656e-02,-1.20582308089923e-07,1.9025208609913e-07],
	[6.28913125093745e-02,1.57230880492077e-02,4.50173950210936e-07,-7.10095814326211e-07],
	[7.86141406367182e-02,1.57218581096652e-02,-1.6801134927677e-06,2.65013117122306e-06],
	[9.43369687640618e-02,1.57264482761933e-02,6.27028002088761e-06,-9.89042887057992e-06],
	[0.110059796891405,1.57093175496234e-02,-2.3401006590873e-05,-1.38072160996115e-05],
	[0.125731906218338,1.56210938881428e-02,-6.48226548897318e-05,-1.09589073471542e-05],
	[0.141277218544244,1.54585718563219e-02,-9.76993769311995e-05,-1.8435355127926e-05],
	[0.156619655668507,1.52078670370757e-02,-1.53005442314969e-04,-1.67372729626865e-05],
	[0.171657779990305,1.48516443335577e-02,-2.03217261203011e-04,-1.6053153842923e-05],
	[0.186290153908817,1.43970503496229e-02,-2.51376722731783e-04,-2.0487712487232e-05],
	[0.200415339823221,1.38328337666976e-02,-3.12839860193485e-04,-2.87929972350807e-05],
	[0.21390654073249,1.31207750546054e-02,-3.99218851898739e-04,-1.64966998047952e-05],
	[0.226611600235392,1.22728472513935e-02,-4.48708951313131e-04,-2.09533006010426e-04],
	[0.238226205529461,0.010746830330736,-1.07730796934443e-03,-3.62622486012388e-04],
	[0.247533105404841,7.50434693400999e-03,-2.16517542738159e-03,7.21725142460532e-04],
	[0.25359400205393,0,0,0]]

Ainv = [[360,0,0.525659171870953,-0.108825049107477],
	[360.416834122763,0.724843196419474,0.199184024548521,2.62551481802318e-02],
	[361.367116491911,1.20197669005721,0.277949469089217,0.067442573577184],
	[362.914485224635,1.9602033489672,0.480277189820773,-0.105743510731405],
	[365.249222252692,2.60352719641453,0.163046657626557,5.45585170007272e-02],
	[368.070354623733,3.09329606266982,0.326722208628733,0.166037200298193],
	[371.65641009533,4.24485208082187,0.824833809523311,-3.21896781028501e-02],
	[376.693906307572,5.79795066555994,0.728264775214762,-6.60736665866768e-03],
	[383.213514381689,7.23465811601346,0.708442675238766,0.15072983976028],
	[391.307345012701,9.10373298577183,1.16063219451961,-0.179617498594592],
	[401.392092694398,10.8861448790273,0.621779698735851,0.341705268279584],
	[413.241722540441,13.1548200813377,1.64689550357463,1.17068108119511e-04],
	[428.043555193461,16.4489622928113,1.647246707899,0.098715848869638],
	[446.238480043041,20.0396032552183,1.94339425450789,6.02822606623867e-02],
	[468.28175981343,24.1072385462212,2.12424103649507,0.772023741431454],
	[495.285263137577,30.6717918435057,4.44031226078943,0.630072192147736],
	[531.02743943402,41.4426329415278,6.33052883723259,6.55213085847343],
	[585.352732071254,73.7600831914133,25.9869214126529,-8.66230713755095],
	[676.437429537769,0,0,0]]

Binv = [[0,4.48028449203308,0,2.09583373855793e-06],
	[4.48028658786682,4.4802907795343,6.28750121389743e-06,-9.34180729128542e-06],
	[8.96057431309504,4.48027532911485,-2.17379206626234e-05,2.86397667972338e-05],
	[13.440856544056,4.48031777257392,6.41813797317425e-05,-7.75769027168138e-05],
	[17.921160921107,4.48021340462523,-1.68549328417811e-04,1.80211656021889e-04],
	[22.4013859880598,4.48041694093646,3.72085639648745e-04,-3.077297432732e-04],
	[26.8818672848926,4.48023792298594,-5.51103590169966e-04,5.52013647654448e-05],
	[31.3616093056532,4.47930131989989,-3.85499495870079e-04,2.72611068030226e-03],
	[35.8432512367375,4.48670865294906,7.79283254503316e-03,3.26046866161978e-03],
	[40.3410131908932,4.51207572402399,1.75742385298969e-02,2.67594481383782e-03],
	[44.8733390982609,4.55525203552529,0.025602072971413,5.36971806282605e-03],
	[49.4595629248204,4.6225653356566,4.17112271598921e-02,4.53145360713592e-03],
	[54.1283709412441,4.71958215079779,5.53055879813042e-02,1.06735974136845e-02],
	[58.9139322774368,4.86221411900145,8.73263802223576e-02,-5.49623130179189e-03],
	[63.8579765453589,5.02037818554079,7.08376863169775e-02,7.40417279635341e-02],
	[69.0232341451802,5.38417874206535,0.292962870207576,-0.185390519850989],
	[74.5149852376021,5.41393292292753,-0.263208689345397,0.937041240690435],
	[80.6027507118747,7.69863926630805,2.54791503272591,-0.849305010908635],
	[90,0,0,0]]


# Convert geographic coordinates to X-Y
# Parameters:
#	1) latlon = tuple of geographic coordinates (latitude,longitude)
#	2) width = width of map
# Return value:
#	= tuple of map coordinates (X,Y)
#
def RobinsonXY(latlon,width=1.0):
	lat,lon = latlon
	t = 0.2 * abs(lat)
	i = int(t)
	t = t - i
	if (i > 18):
		i = 18
		t = 0.0
	X = width * lon \
		* (Acoef[i][0] + t * (Acoef[i][1] + t * (Acoef[i][2] + t * Acoef[i][3])))
	Y = (-width if (lat < 0) else width) \
		* (Bcoef[i][0] + t * (Bcoef[i][1] + t * (Bcoef[i][2] + t * Bcoef[i][3])))
	return (X,Y)


# Convert X-Y coordinates to geographic
# Parameters:
#	1) XY = tuple of map coordinates (X,Y)
#	2) width = width of map
# Return value:
#	= tuple of geographic coordinates (latitude,longitude)
#
def RobinsonLatLon(XY,width=1.0):
	X,Y = XY
	t = 18 * abs(Y) / (width * Bcoef[18][0])
	i = int(t)
	t = t - i
	if (i > 18):
		i = 18
		t = 0.0
	lat = (-1 if (Y < 0) else 1) \
		* (Binv[i][0] + t * (Binv[i][1] + t * (Binv[i][2] + t * Binv[i][3])))
	lon = (X / width) \
		* (Ainv[i][0] + t * (Ainv[i][1] + t * (Ainv[i][2] + t * Ainv[i][3])))
	return (lat,lon)
